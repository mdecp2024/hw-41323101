var tipuesearch = {"pages": [{'title': 'About', 'text': '國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n cp2024 計算機程式 \n 課程教材: \n Learn Python with Jupyter  ( site ,  ebook ) \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入  https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼:  ldodwua \n 個人倉儲: https://github.com/mdecp2024/hw-41323101 \n 個人網站: https://mdecp2024.github.io/hw-41323101/content/index.html \n 其他資訊: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n', 'tags': '', 'url': 'About.html'}, {'title': 'Attendance', 'text': '出席 (10%) - 自行舉證評分 \n 自行利用 Github commits 提交記錄評分. \n', 'tags': '', 'url': 'Attendance.html'}, {'title': 'HW 1', 'text': '主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%) \n USB 隨身碟: \n 下載  python_2025_lite.7z  (428 MB, 解開壓縮後約 1.5 GB) \n Jupyter \n What are Github and Codespaces? \n Hello World - GitHub Docs \n 利用包含學號的字串作為帳號, 申請免費使用 Github. \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 1 \n \n PART 1: Creating the basics 資料整理 (10%) \n 啟動可攜程式系統後, 在命令列中: \n y:\\>cd notebook \n y:\\notebook>jupyter lab --collaborative \n 進入  01_string_input_print.ipynb  練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過  https://nbviewer.org/  將已經提交的  01_string_input_print.ipynb , 嵌入下列網頁中. \n \n 上列 iframe 標註的 html 語法: \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 1.html'}, {'title': 'HW 1 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 1 Exam.html'}, {'title': 'w7', 'text': '\n', 'tags': '', 'url': 'w7.html'}, {'title': 'w10', 'text': '題目一 \n \n 題目二 \n \n 題目三 \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11_hw', 'text': '題目一 \n 已知可以用 Python 程式 由上往下列印三角形 * , 或 由左往右列印三角形 * , 請將此程式延伸到可以在 10x10 的字元區域中, 以 "*" 字元列印出圓型區域. 完成後請將程式碼存入個人 Gist 後, 直接在個人作業網站中的 Brython 頁面中執行 \n 題目二 \n 已知可以在網頁中利用 Brython 繪製方格與塗色, 如下連結, 請設法修改此一程式, 直接將程式存入個人的 Gist, 並利用黑色方塊圍出一個圓形區域. \n \n \n 在程式中，圓形的邊界是通過數學公式判斷的，因此，如何精確地定義圓形的範圍非常重要。當設置不同的圓心或半徑時，可能會需要調整邏輯來確保圓形能正確顯示。 \n 使用 Brython 在網頁上展示 Python 程式設計是非常有趣且具有挑戰性的。可以在網頁中實現更多功能，並會發現網頁開發中的一些技巧和細節，這對編程能力的提升非常有幫助。 \n \n', 'tags': '', 'url': 'w11_hw.html'}, {'title': 'w12_hw', 'text': 'w12_1 \n \n 這次作業不僅提升了我的 Python 編程能力，還增強了我對網頁開發技術的理解。通過將 JupyterLab 中的 Python 程式碼轉換為可在 Brython 上運行的代碼，我學到了如何設計交互式應用，並熟悉了如何將程式碼嵌入到現代網頁中。 \n 第六題:06_list_slicing \n 範例程式: 城市 \n cities = ["San Diego", "Prague", "Cape Town", "Tokyo", "Melbourne"]\nprint(cities) # 輸出所有城市\nprint(cities[1]) # 輸出索引 1 的城市\nprint(cities[1:4]) # 從索引 1 到 3（不包含索引 4）\nprint(cities[1:4:2]) # 從索引 1 到 3，每隔一個元素取一次\nprint(cities[0:3]) # 從索引 0 到 2（不包含索引 3）\nprint(cities[:3]) # 與上面相同，從開始到索引 2（不包含索引 3）\nprint(cities[2:5]) # 從索引 2 到 4（不包含索引 5）\nprint(cities[2:]) # 從索引 2 開始到列表結尾\nprint(cities[0:5:2]) # 從索引 0 到 4，每隔一個元素取一次\nprint(cities[::2]) # 從開始到結尾，每隔一個元素取一次\nprint(cities[4]) # 輸出索引 4 的城市\nprint(cities[-1]) # 輸出最後一個元素（倒數第 1 個）\nprint(cities[-4:-1]) # 切片：從倒數第 4 個到倒數第 2 個（不包含倒數第 1 個）\nprint(cities[3:0:-1]) # 從索引 3 到 1（不包含索引 0）\nprint(cities[-2:-5:-1]) # 從倒數第 2 個到倒數第 5 個\nprint(cities[::-1]) # 將整個列表反轉 \n 第七題:07_list_slicing_use \n 範例程式: 列表操作 \n 列表操作（例如合併和插入元素）允許靈活地修改列表內容。 \n 修改列表中的切片會影響原列表的結構。 \n 使用  del  可以刪除列表中的特定元素或整個列表。 \n \n # 定義感官列表\nsenses = ["eyes", "nose", "ears", "tongue", "skin"]\nprint (senses) # 輸出：[\'eyes\', \'nose\', \'ears\', \'tongue\', \'skin\']\n\n# 修改(索引 1)的元素替換為 "smell"\nsenses[1] = "smell"\nprint (senses) # 輸出：[\'eyes\', \'smell\', \'ears\', \'tongue\', \'skin\']\n\n# 修改索引第三和 第四的元素替換為 ["taste", "touch"]，\nsenses[3:5] = ["taste", "touch"]\nprint (senses) # 輸出：[\'eyes\', \'smell\', \'ears\', \'taste\', \'touch\']\n\n# 修改索引第零到第二的元素替換為 ["sight", "hearing"]\nsenses[0:3:2] = ["sight", "hearing"]\nprint (senses) # 輸出：[\'sight\', \'smell\', \'hearing\', \'taste\', \'touch\']\n\n# 定義行星列表\nplanets = ["Mercury", "Mars", "Earth", "Neptune"]\nprint (planets) # 輸出：[\'Mercury\', \'Mars\', \'Earth\', \'Neptune\']\n\n# 向 planets "Jupiter"加入列表中，\nplanets = planets + ["Jupiter"]\nprint (planets) # 輸出：[\'Mercury\', \'Mars\', \'Earth\', \'Neptune\', \'Jupiter\']\n\n# 將 "Venus" 插入到 planets 列表的索引 2 位置\nplanets = planets[0:2] + ["Venus"] + planets[2:5]\nprint (planets) # 輸出：[\'Mercury\', \'Mars\', \'Venus\', \'Earth\', \'Neptune\', \'Jupiter\']\n\n# 在索引 5 位置插入 "Uranus" 和 "Saturn"\nplanets = planets[:5] + ["Uranus", "Saturn"] + planets[5:]\nprint(planets) # 輸出：[\'Mercury\', \'Mars\', \'Venus\', \'Earth\', \'Neptune\', \'Uranus\', \'Saturn\', \'Jupiter\']\n\n# 定義房間列表\nhouse = ["kitchen", "dining room", "living room", "bedroom", "bathoom", "garden", "balcony", "terrace"]\nprint (house) # 輸出：[\'kitchen\', \'dining room\', \'living room\', \'bedroom\', \'bathoom\', \'garden\', \'balcony\', \'terrace\']\n\n# 刪除索引 1 的元素（\'dining room\'）\ndel house[1]\nprint (house) # 輸出：[\'kitchen\', \'living room\', \'bedroom\', \'bathoom\', \'garden\', \'balcony\', \'terrace\']\n\n# 刪除索引 4 到 5 的元素（\'garden\' 和 \'balcony\'）\ndel house[4:6]\nprint (house) # 輸出：[\'kitchen\', \'living room\', \'bedroom\', \'bathoom\', \'terrace\']\n\n# 刪除步長為 2 的元素（\'kitchen\'，\'bedroom\'，\'terrace\'）\ndel house[::2]\nprint (house) # 輸出：[\'living room\', \'bathoom\']\n\n# 刪除整個 house 列表\ndel house\n\n# 嘗試輸出會引發錯誤，因為 house 列表已被刪除\nprint (house) # NameError: name \'house\' is not \n \n', 'tags': '', 'url': 'w12_hw.html'}, {'title': 'w13', 'text': '', 'tags': '', 'url': 'w13.html'}, {'title': 'w13_hw', 'text': '\n \n \n \n 啟動Brython \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w13_hw.html'}, {'title': 'HW 2', 'text': '主題: Python 的數列、判斷式與重複迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%): \n PART 2: Introduction to lists and if/else statements \n PART 3: Introduction to the for loop \n 完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 2.html'}, {'title': 'HW 2 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 2 Exam.html'}, {'title': 'HW 3', 'text': '主題: Python 的數字、演算法與迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 4 and Part 5 \n 完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 3.html'}, {'title': 'HW 3 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 3 Exam.html'}, {'title': 'HW 4', 'text': '主題: 利用 Python 控制機電模擬系統 (20%) \n 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件 \n 利用  CoppeliaSim  建立機電模擬系統 \n 利用  Python  跨網路控制瀏覽器上的機電模擬系統 \n 範例: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 4.html'}, {'title': 'HW 4 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 4 Exam.html'}, {'title': 'Final Report', 'text': '期末口頭與書面專題報告 (20%) \n 期末口頭專題報告影片: \n ...... \n 期末書面專題報告檔案 (pdf): \n ...... \n 電腦輔助設計與實習課程總結心得: \n ...... \n 期末報告自評成績: \n 完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'Final Report.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束  \n \n  ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}]};